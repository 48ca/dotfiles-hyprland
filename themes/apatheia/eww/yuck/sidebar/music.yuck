;;  Music Widgets

;;  Music
(defwidget music-side []
  (box
    :halign "center"
    :class "music-side"
    :space-evenly "false"
    (box
      :class "left-music-container"
      :orientation "v"
      :valign "center"
      :space-evenly "false"
      (music)
      (music_prog)
    )
    (music_ctl)
    (box
      :class "right-music-container"
      :space-evenly "false"
      (sidebar_audio))
  )
)


(defwidget music []
  (box :orientation "v" :space-evenly "false" :vexpand "false" :hexpand "false"
    (box :orientation "v" :spacing 5 :space-evenly "false" :vexpand "false" :hexpand "false" :class "msc_bg"
      (box
        :class "album_art"
        :style "background-image: url('${cover_art}');")
      (label :halign "start" :class "song" :wrap "false" :limit-width 12 :text song)
      (label :halign "start" :class "song_artist" :wrap "true" :limit-width 15 :text song_artist)
    )))
    
    (defwidget music_ctl []
      (box :orientation "v" :spacing 1 :halign "center" :space-evenly "true" :vexpand "false" :hexpand "false" :class "msc_ctl_bg"
    (button :class "song_btn_prev" :onclick "scripts/music previous" "")
    (button :class "song_btn_play" :onclick "scripts/music toggle" playpause)
    (button :class "song_btn_next" :onclick "scripts/music next" "")
    ; (button :class "song_btn_loop" :onclick "~/.config/eww/leftbar/scripts/music_info --loop" loop_status)
  ))

; onchange: with playerctl (position [OFFSET][+/-]  Command the player to go to the position or seek forward/backward OFFSET in seconds)
(defwidget music_prog []
    (box :class "music_prog_bg"
        (scale :active "false" :min 0 :max 101 :value song_perc :width 280 :vexpand "false" :class "song_prog")))

(defwidget sidebar_audio []
  (box
    (box 
      :orientation "h" 
      :halign "center"
      (box 
        :class "sidebar_volume_bar" 
        :orientation "v" 
        :space-evenly "false"
                        (scale 
                          :flipped "true" 
                          :orientation "v" 
                          :vexpand true
                          :min 0 
                          :max 101 
                          :value volume_percent 
                          :onchange "amixer -D pulse sset Master {}%" )
                        (label  
                          :text "" 
                          :vexpand false
                          :class "sidebar_vol_icon")
                      )
      (box 
        :class "sidebar_mic_bar" 
        :orientation "v" 
        :space-evenly "false"
                        (scale 
                          :flipped "true" 
                          :orientation "v" 
                          :vexpand true
                          :min 0 
                          :max 101 
                          :value mic_percent 
                          :active "false")
                        (label  
                          :text "" 
                          :vexpand false
                          :class "sidebar_mic_icon")))))

; ;;  Music Widgets
; (defwidget music []
  ;   (box
    ;     :class "music-player"
    ;     :orientation "h"
    ;     :space-evenly "fe"
    ;     :spacing 10
    ;     :halign "center"
    ;     :valign "center"
    ;     :hexpand "true"
    ;     :width "400"
    ;     (box
      ;       :class "album_art"
      ;       :style "background-image: url('${art}');")
    ;     (box
      ;       :orientation "v"
      ;       :space-evenly "false"
      ;       :valign "center"
      ;       :halign "center"
      ;       :hexpand "true"
      ;       :spacing 10
      ;       (label
        ;         :class "song"
        ;         :text title
        ;         :limit-width "15"
      ;       :wrap true)
      ;       (label
        ;         :class "artist"
        ;         :text artist
      ;       :wrap true)
      ;       (box
        ;         :orientation "h"
        ;         :space-evenly "false"
        ;         :valign "center"
        ;         :halign "center"
        ;         :spacing 25
        ;         (button :class "btn_prev" :onclick "scripts/music previous" "玲")
        ;         (button :class "btn_play" :onclick "scripts/music toggle" playpause)
        ;         (button :class "btn_next" :onclick "scripts/music next" "怜")))
    ;     ; (box
      ;       ; 	:orientation "v"
    ;     ; 	lyrics)
  ;   ))
; ; (defpoll lyrics	:interval "1s"  "scripts/music lyrics")
